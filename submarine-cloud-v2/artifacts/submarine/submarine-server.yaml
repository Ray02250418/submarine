---
# Source: submarine/templates/submarine-server.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "submarine-server"
---
# Source: submarine/templates/submarine-server.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "default"
---
# Source: submarine/templates/submarine-server.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: "submarine-server"
  labels:
    app: "submarine-server"
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: "submarine-server"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: submarine-config
data:
  SUBMARINE_SERVER_PORT: "8080"
  SUBMARINE_SERVER_PORT_8080_TCP: "8080"
  K8S_APISERVER_URL: kubernetes.default.svc
  SUBMARINE_CONF_DIR: conf
  SUBMARINE_LOCALIZATION_MAX_ALLOWED_FILE_SIZE_MB: "2048"
  SUBMARINE_SERVER_ADDR: "0.0.0.0"
  SUBMARINE_SERVER_SSL: "false"
  SUBMARINE_SERVER_SSL_PORT: "8443"
  SUBMARINE_SERVER_JETTY_THREAD_POOL_MAX: "400"
  SUBMARINE_SERVER_JETTY_THREAD_POOL_MIN: "8"
  SUBMARINE_SERVER_JETTY_THREAD_POOL_TIMEOUT: "30"
  SUBMARINE_SERVER_JETTY_REQUEST_HEADER_SIZE: "8192"
  SUBMARINE_SERVER_SSL_CLIENT_AUTH: "false"
  SUBMARINE_SERVER_SSL_KEYSTORE_PATH: keystore
  SUBMARINE_SERVER_SSL_KEYSTORE_TYPE: JKS
  SUBMARINE_SERVER_SSL_KEYSTORE_PASSWORD: ""
  SUBMARINE_SERVER_SSL_KEY_MANAGER_PASSWORD: "" # Save as null in SubmarineConfVars.java
  SUBMARINE_SERVER_SSL_TRUSTSTORE_PATH: "" # Save as null in SubmarineConfVars.java
  SUBMARINE_SERVER_SSL_TRUSTSTORE_TYPE: "" # Save as null in SubmarineConfVars.java
  SUBMARINE_SERVER_SSL_TRUSTSTORE_PASSWORD: "" # Save as null in SubmarineConfVars.java
  SUBMARINE_CLUSTER_ADDR: ""
  SUBMARINE_SERVER_RPC_ENABLED: "false"
  SUBMARINE_SERVER_RPC_PORT: "8980"
  CLUSTER_HEARTBEAT_INTERVAL: "3000"
  CLUSTER_HEARTBEAT_TIMEOUT: "9000"
  JDBC_DRIVERCLASSNAME: com.mysql.jdbc.Driver
  JDBC_URL: jdbc:mysql://127.0.0.1:3306/submarine?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&allowMultiQueries=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=UTC&useTimezone=true&useLegacyDatetimeCode=true
  JDBC_USERNAME: submarine
  JDBC_PASSWORD: password
  METASTORE_JDBC_URL: jdbc:mysql://127.0.0.1:3306/metastore?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&useSSL=false
  METASTORE_JDBC_USERNAME: metastore
  METASTORE_JDBC_PASSWORD: password
  SUBMARINE_NOTEBOOK_DEFAULT_OVERWRITE_JSON: ""
  WORKBENCH_WEBSOCKET_MAX_TEXT_MESSAGE_SIZE: "1024000"
  WORKBENCH_WEB_WAR: submarine-workbench/workbench-web/dist
  SUBMARINE_RUNTIME_CLASS: org.apache.submarine.server.submitter.yarn.YarnRuntimeFactory
  SUBMARINE_SUBMITTER: k8s
  SUBMARINE_SERVER_SERVICE_NAME: submarine-server
  ENVIRONMENT_CONDA_MIN_VERSION: "4.0.1"
  ENVIRONMENT_CONDA_MAX_VERSION: "4.11.10"
---
# Source: submarine/templates/submarine-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "submarine-server"
spec:
  selector:
    matchLabels:
      app: "submarine-server"
  replicas: 1
  template:
    metadata:
      labels:
        app: "submarine-server"

    spec:
      serviceAccountName: "submarine-server"
      initContainers:
      - name: submarine-server-initcontainer
        image: "minio/mc"
        command: ["/bin/bash", "-c",
        "cnt=0;
        while ! /bin/bash -c 'mc --config-dir /root/.mc config host add minio http://submarine-minio-service:9000
        submarine_minio submarine_minio' 2>&1;
        do
          sleep 15;
          ((cnt=cnt+1));
          if [ $cnt -eq 80 ];then
            echo 'ERROR: wait too long for minio pod';
            exit 1;
          fi;
        done;
        if /bin/bash -c 'mc --config-dir /root/.mc ls minio/submarine' >/dev/null 2>&1; then
          echo 'Bucket minio/submarine already exists, skipping creation.';
        else
          /bin/bash -c 'mc --config-dir /root/.mc mb minio/submarine';
        fi;"]
        volumeMounts:
          - name: mc-config-vol
            mountPath: /root/.mc
      volumes:
        - name: mc-config-vol
          emptyDir: { }
      containers:
      - name: "submarine-server"
        env:
        - name: SUBMARINE_SERVER_PORT
          value: "8080"
        - name: SUBMARINE_SERVER_PORT_8080_TCP
          value: "8080"
        - name: K8S_APISERVER_URL
          value: "kubernetes.default.svc"

        image: "apache/submarine:server-0.8.0-SNAPSHOT"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
#         envFrom:
#           - configMapRef:
#               name: submarine-config
